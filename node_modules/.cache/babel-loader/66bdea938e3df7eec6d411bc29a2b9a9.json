{"ast":null,"code":"var _jsxFileName = \"/home/xhesina/Desktop/courier-server/src/main/react-app/src/FormToBePrinted/printedForm.js\";\nimport React, { Component } from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport ReactToPrint from \"react-to-print\";\nimport ComponentToBePrinted from \"./componentToBePrinted\";\n\nclass PrintedForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ticket: {}\n    };\n    console.log(this.props);\n  }\n\n  componentDidMount() {\n    if (this.props.history.location.state != null) {\n      let query = this.props.history.location.state.ticket;\n      axios.get(\"/ticket/ticket\", {\n        params: {\n          id: query\n        }\n      }).then(response => {\n        console.log(response.data);\n        this.setState({\n          ticket: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, \"Fatura\"), /*#__PURE__*/React.createElement(ReactToPrint, {\n      style: {\n        float: \"right\",\n        marginTop: \"-50px\"\n      },\n      trigger: () => {\n        // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\n        // to the root node of the returned component as it will be overwritten.\n        return /*#__PURE__*/React.createElement(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 20\n          }\n        }, \"Print\");\n      },\n      content: () => this.componentRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ComponentToBePrinted, {\n      ref: el => this.componentRef = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default PrintedForm;","map":{"version":3,"sources":["/home/xhesina/Desktop/courier-server/src/main/react-app/src/FormToBePrinted/printedForm.js"],"names":["React","Component","Wrapper","Button","axios","ReactToPrint","ComponentToBePrinted","PrintedForm","constructor","props","state","ticket","console","log","componentDidMount","history","location","query","get","params","id","then","response","data","setState","catch","error","render","float","marginTop","componentRef","el"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAClCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AACD;;AACDK,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKL,KAAL,CAAWM,OAAX,CAAmBC,QAAnB,CAA4BN,KAA5B,IAAqC,IAAzC,EAA+C;AAC7C,UAAIO,KAAK,GAAG,KAAKR,KAAL,CAAWM,OAAX,CAAmBC,QAAnB,CAA4BN,KAA5B,CAAkCC,MAA9C;AACAP,MAAAA,KAAK,CACFc,GADH,CACO,gBADP,EACyB;AACrBC,QAAAA,MAAM,EAAE;AACNC,UAAAA,EAAE,EAAEH;AADE;AADa,OADzB,EAMGI,IANH,CAMSC,QAAD,IAAc;AAClBV,QAAAA,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACC,IAArB;AACA,aAAKC,QAAL,CAAc;AAAEb,UAAAA,MAAM,EAAEW,QAAQ,CAACC;AAAnB,SAAd;AACD,OATH,EAUGE,KAVH,CAUUC,KAAD,IAAW;AAChBd,QAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACD,OAZH;AAaD;AACF;;AAGDC,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIA,oBAAC,YAAD;AAAe,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAAtB;AACE,MAAA,OAAO,EAAE,MAAM;AACb;AACA;AACA,4BAAO,oBAAC,MAAD;AAAS,UAAA,OAAO,EAAC,WAAjB;AAA6B,UAAA,KAAK,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD,OALH;AAME,MAAA,OAAO,EAAE,MAAM,KAAKC,YANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,eAYA,oBAAC,oBAAD;AAAsB,MAAA,GAAG,EAAEC,EAAE,IAAK,KAAKD,YAAL,GAAoBC,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZA,CADF,CADF;AAmBD;;AAjDiC;;AAoDpC,eAAexB,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Wrapper from \"../Wrapper\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport ReactToPrint from \"react-to-print\";\nimport ComponentToBePrinted from \"./componentToBePrinted\"\n\nclass PrintedForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ticket: {},\n    };\n    console.log(this.props);\n  }\n  componentDidMount() {\n    if (this.props.history.location.state != null) {\n      let query = this.props.history.location.state.ticket;\n      axios\n        .get(\"/ticket/ticket\", {\n          params: {\n            id: query,\n          },\n        })\n        .then((response) => {\n          console.log(response.data);\n          this.setState({ ticket: response.data });\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }\n\n\n  render() {\n  \n    return (\n      <div>\n        <Wrapper>\n          <h3>Fatura</h3>\n        \n         \n        <ReactToPrint  style={{ float: \"right\", marginTop: \"-50px\" }}\n          trigger={() => {\n            // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\n            // to the root node of the returned component as it will be overwritten.\n            return <Button  variant=\"contained\" color=\"secondary\" >Print</Button>;\n          }}\n          content={() => this.componentRef}\n        />\n        <ComponentToBePrinted ref={el => (this.componentRef = el)} />\n      \n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default PrintedForm;\n"]},"metadata":{},"sourceType":"module"}